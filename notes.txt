create virtual environment: python -m venv .venv
Activate virtual environment: .venv\Scripts\activate
How to activate .env file: pip install python-dotenv then from dotenv import load_dotenv then add this function load_dotenv()  # Load variables from .env into the environment
Run the requirement.txt file: pip install -r requirements.txt
create requirement.txt file: pip freeze > requirements.txt
to run the program : 

GIT PUSH Steps: 
In the terminal, initialize a new Git repository: git init
Add all files in your folder to the staging area: git add .
Commit the files with a message: git commit -m "Initial commit"
Link your local repository to the GitHub repository you mentioned (first time required): git remote add origin https://github.com/tosurajitc/Coopervision_POC2.git
Push the changes to the remote repository: git push -u origin main (or master)

If git hub fails then:
git remote rename origin old-origin
git remote add origin https://github.com/tosurajitc/Coopervision_POC2.git


# GROQ API configuration
GROQ_API_KEY=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
GROQ_MODEL_NAME=deepseek-r1-distill-llama-70b
GROQ_API_URL=https://api.groq.com/openai/v1/chat/completions

# Application settings
DEBUG_MODE=False
LOG_LEVEL=INFO
MAX_TOKENS=4096
TEMPERATURE=0.7

project_root/
├── main.py
├── .env
├── requirement.txt
├── agents/
│   ├── init.py
│   └── data_processing_agent.py
│   └── groq_client.py
│   └── implementation_strategy_agent.py
│   └── insight_generation_agent.py
│   └── user_query_agent.py
│   
└── sample_tickets.csv